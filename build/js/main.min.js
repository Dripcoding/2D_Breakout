!function(){"use strict";var n=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},o=function(){function n(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}}(),t=function(){function t(){n(this,t),this.canvas=document.getElementById("myCanvas"),this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height}return o(t,[{key:"clear",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"detectEdgeCollisions",value:function(t,e,i){t.y+t.dy<t.ballRadius?(t.dy=-t.dy,t.changeColor()):t.y+t.dy>this.height-t.ballRadius&&(t.x>e.paddleX&&t.x<e.paddleX+e.paddleWidth?(t.dy=-t.dy,t.changeColor()):(i.lives--,0===i.lives?(alert("Game Over"),document.location.reload()):(t.x=this.width/2,t.y=this.height-30,t.dx=2,t.dy=-2,e.paddleX=(this.width-e.paddleWidth)/2))),(t.x+t.dx<t.ballRadius||t.x+t.dx>this.width-t.ballRadius)&&(t.dx=-t.dx,t.changeColor())}},{key:"detectBrickCollisions",value:function(t,e,i){for(var n=0;n<e.brickColumnCount;n++)for(var o=0;o<e.brickRowCount;o++){var s=e.bricks[n][o];1===s.status&&t.x>s.x&&t.x<s.x+e.brickWidth&&t.y>s.y&&t.y<s.y+e.brickHeight&&(t.dy=-t.dy,t.changeColor(),s.status=0,i.score++,i.score==e.brickRowCount*e.brickColumnCount&&(alert("You Win! Congrats!"),document.location.reload()))}}}]),t}(),e=function(){function i(t,e){n(this,i),this.ballColor="#0095DD",this.x=e/2,this.y=t-30,this.ballRadius=10,this.dx=2,this.dy=-2}return o(i,[{key:"changeColor",value:function(){var t="rgb("+256*Math.random()+", "+256*Math.random()+", "+256*Math.random()+")";this.ballColor=t}},{key:"drawBall",value:function(t){t.ctx.beginPath(),t.ctx.arc(this.x,this.y,this.ballRadius,0,2*Math.PI),t.ctx.fillStyle=this.ballColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(){this.x+=this.dx,this.y+=this.dy}}]),i}(),i=function(){function i(){n(this,i),this.brickColor="#0095DD",this.brickRowCount=10,this.brickColumnCount=7,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=50,this.brickOffsetLeft=160,this.bricks=[];for(var t=0;t<this.brickColumnCount;t++){this.bricks[t]=[];for(var e=0;e<this.brickRowCount;e++)this.bricks[t][e]={x:0,y:0,status:1}}}return o(i,[{key:"drawBricks",value:function(t){for(var e=0;e<this.brickColumnCount;e++)for(var i=0;i<this.brickRowCount;i++){var n=this.bricks[e][i];if(1===n.status){var o=e*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,s=i*(this.brickHeight+this.brickPadding)+this.brickOffsetTop;n.x=o,n.y=s,t.ctx.beginPath(),t.ctx.rect(n.x,n.y,this.brickWidth,this.brickHeight),t.ctx.fillStyle=this.brickColor,t.ctx.fill(),t.ctx.closePath()}}}}]),i}(),s=function(){function e(t){n(this,e),this.paddleColor="#0095DD",this.paddleHeight=10,this.paddleWidth=75,this.paddleX=(t.width-this.paddleWidth)/2}return o(e,[{key:"drawPaddle",value:function(t){t.ctx.beginPath(),t.ctx.rect(this.paddleX,t.height-this.paddleHeight,this.paddleWidth,this.paddleHeight),t.ctx.fillStyle=this.paddleColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(t){this.paddleX+=t}}]),e}(),r=function(){function t(){n(this,t),this.lives=3,this.score=0,this.opponentScore=0,this.opponentLives=0,this.x=0,this.y=0}return o(t,[{key:"drawScore",value:function(t){t.ctx.font="24px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Score: "+this.score,8,20),t.ctx.fillText("Opponent's Score: "+this.opponentScore,8,40)}},{key:"drawLives",value:function(t){t.ctx.font="24px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Lives: "+this.lives,t.width-90,20),t.ctx.fillText("Opponent's Lives: "+this.opponentLives,t.width-218,40)}},{key:"update",value:function(t,e,i){this.lives+=t,this.username=e,this.score+=i}}]),t}(),a=io.connect("https://breakout-2d.herokuapp.com");document.write('<script src="https://'+(location.host||"localhost").split(":")[0]+':35729/livereload.js?snipver=1"><\/script>');var d=function(){function t(){n(this,t),this.rightPressed=!1,this.leftPressed=!1,this.players=[],this.mode="medium",window.addEventListener("keydown",this.keyDownHandler,!1),window.addEventListener("keyup",this.keyUpHandler,!1),window.addEventListener("mousemove",this.mouseMoveHandler,!1),c.addEventListener("click",y,!1),h.addEventListener("click",y,!1),u.addEventListener("click",y,!1),f.addEventListener("click",y,!1)}return o(t,[{key:"init",value:function(){var t=this;requestAnimationFrame(function(){return t.draw(k)})}},{key:"draw",value:function(t){var e=this;t.clear(),t.ctx.beginPath(),b.drawPaddle(t),p.drawBricks(t),v.drawBall(t),m.drawScore(t),m.drawLives(t),t.detectBrickCollisions(v,p,m),t.detectEdgeCollisions(v,b,m),a.emit("playerScored",m),a.emit("playerLife",m),this.rightPressed&&b.paddleX<t.width-b.paddleWidth?b.update(7):this.leftPressed&&0<b.paddleX&&b.update(-7),v.update(),!1===l&&requestAnimationFrame(function(){e.draw(t)})}},{key:"keyDownHandler",value:function(t){39===t.keyCode?x.rightPressed=!0:37===t.keyCode?x.leftPressed=!0:80===t.keyCode?!1===(l=!l)&&x.init():81===t.keyCode&&(console.log("player quit game"),alert("You quit. Game Over!"),document.location.reload())}},{key:"keyUpHandler",value:function(t){39===t.keyCode?x.rightPressed=!1:37===t.keyCode&&(x.leftPressed=!1)}},{key:"mouseMoveHandler",value:function(t){var e=t.clientX-k.canvas.offsetLeft;0<e&&e<k.width&&(b.paddleX=e-b.paddleWidth/2)}}]),t}(),l=!0,c=document.querySelector(".easy-mode-btn"),h=document.querySelector(".medium-mode-btn"),u=document.querySelector(".hard-mode-btn"),f=document.querySelector(".marathon-mode-btn");function y(t){var e=t.target.name;"easy"===e?console.log("mode changed to easy"):"medium"===e?console.log("mode changed to medium"):"hard"===e?console.log("mode changed to hard"):console.log("mode changed to marathon")}var k=new t,v=new e(k.height,k.width),p=new i(k),b=new s(k),m=new r,x=new d;a.on("otherPlayerScore",function(t){m.opponentScore=t}),a.on("otherPlayerLife",function(t){m.opponentLives=t}),x.init()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
