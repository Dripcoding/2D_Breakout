!function(){"use strict";var s=function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")},n=function(){function s(t,i){for(var e=0;e<i.length;e++){var s=i[e];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(t,i,e){return i&&s(t.prototype,i),e&&s(t,e),t}}(),t=function(){function t(){s(this,t),this.canvas=document.getElementById("myCanvas"),this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height}return n(t,[{key:"clear",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"detectEdgeCollisions",value:function(t,i,e){t.y+t.dy<t.ballRadius?t.dy=-t.dy:t.y+t.dy>this.height-t.ballRadius&&(t.x>i.paddleX&&t.x<i.paddleX+i.paddleWidth?t.dy=-t.dy:(e.lives--,0===e.lives?(alert("Game Over"),document.location.reload()):(t.x=this.width/2,t.y=this.height-30,t.dx=2,t.dy=-2,i.paddleX=(this.width-i.paddleWidth)/2))),(t.x+t.dx<t.ballRadius||t.x+t.dx>this.width-t.ballRadius)&&(t.dx=-t.dx)}},{key:"detectBrickCollisions",value:function(t,i,e){for(var s=0;s<i.brickColumnCount;s++)for(var n=0;n<i.brickRowCount;n++){var r=i.bricks[s][n];1===r.status&&t.x>r.x&&t.x<r.x+i.brickWidth&&t.y>r.y&&t.y<r.y+i.brickHeight&&(t.dy=-t.dy,r.status=0,e.score++,e.score==i.brickRowCount*i.brickColumnCount&&(alert("You Win! Congrats!"),document.location.reload()))}}}]),t}(),i=function(){function e(t,i){s(this,e),this.ballColor="#0095DD",this.x=i/2,this.y=t-30,this.ballRadius=10,this.dx=2,this.dy=-2}return n(e,[{key:"drawBall",value:function(t){t.ctx.beginPath(),t.ctx.arc(this.x,this.y,this.ballRadius,0,2*Math.PI),t.ctx.fillStyle=this.ballColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(){this.x+=this.dx,this.y+=this.dy}}]),e}(),e=function(){function e(){s(this,e),this.brickColor="#0095DD",this.brickRowCount=3,this.brickColumnCount=5,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.bricks=[];for(var t=0;t<this.brickColumnCount;t++){this.bricks[t]=[];for(var i=0;i<this.brickRowCount;i++)this.bricks[t][i]={x:0,y:0,status:1}}}return n(e,[{key:"drawBricks",value:function(t){for(var i=0;i<this.brickColumnCount;i++)for(var e=0;e<this.brickRowCount;e++){var s=this.bricks[i][e];if(1===s.status){var n=i*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,r=e*(this.brickHeight+this.brickPadding)+this.brickOffsetTop;s.x=n,s.y=r,t.ctx.beginPath(),t.ctx.rect(s.x,s.y,this.brickWidth,this.brickHeight),t.ctx.fillStyle=this.brickColor,t.ctx.fill(),t.ctx.closePath()}}}}]),e}(),r=function(){function i(t){s(this,i),this.paddleColor="#0095DD",this.paddleHeight=10,this.paddleWidth=75,this.paddleX=(t.width-this.paddleWidth)/2}return n(i,[{key:"drawPaddle",value:function(t){t.ctx.beginPath(),t.ctx.rect(this.paddleX,t.height-this.paddleHeight,this.paddleWidth,this.paddleHeight),t.ctx.fillStyle=this.paddleColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(t){this.paddleX+=t}}]),i}(),o=function(){function t(){s(this,t),this.lives=3,this.score=0,this.opponentScore=0,this.opponentLives=0,this.x=0,this.y=0}return n(t,[{key:"drawScore",value:function(t){t.ctx.font="16px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Score: "+this.score,8,20),t.ctx.fillText("Opponent's Score "+this.opponentScore,8,30)}},{key:"drawLives",value:function(t){t.ctx.font="16px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Lives: "+this.lives,t.width-65,20),t.ctx.fillText("Opponent's Lives "+this.opponentLives,t.width-145,30)}},{key:"update",value:function(t,i,e){this.lives+=t,this.username=i,this.score+=e}}]),t}(),a=io.connect();document.write('<script src="http://'+(location.host||"localhost").split(":")[0]+':35729/livereload.js?snipver=1"><\/script>');var d=function(){function t(){s(this,t),this.rightPressed=!1,this.leftPressed=!1,this.players=[],window.addEventListener("keydown",this.keyDownHandler,!1),window.addEventListener("keyup",this.keyUpHandler,!1),window.addEventListener("mousemove",this.mouseMoveHandler,!1)}return n(t,[{key:"init",value:function(){var t=this;requestAnimationFrame(function(){return t.draw(l)})}},{key:"draw",value:function(t){var i=this;t.clear(),t.ctx.beginPath(),u.drawPaddle(t),c.drawBricks(t),h.drawBall(t),f.drawScore(t),f.drawLives(t),t.detectBrickCollisions(h,c,f),t.detectEdgeCollisions(h,u,f),a.emit("playerScored",f),a.emit("playerLife",f),this.rightPressed&&u.paddleX<t.width-u.paddleWidth?u.update(7):this.leftPressed&&0<u.paddleX&&u.update(-7),h.update(),requestAnimationFrame(function(){i.draw(t)})}},{key:"keyDownHandler",value:function(t){39===t.keyCode?y.rightPressed=!0:37===t.keyCode&&(y.leftPressed=!0)}},{key:"keyUpHandler",value:function(t){39===t.keyCode?y.rightPressed=!1:37===t.keyCode&&(y.leftPressed=!1)}},{key:"mouseMoveHandler",value:function(t){var i=t.clientX-l.canvas.offsetLeft;0<i&&i<l.width&&(u.paddleX=i-u.paddleWidth/2)}}]),t}(),l=new t,h=new i(l.height,l.width),c=new e(l),u=new r(l),f=new o,y=new d;a.on("otherPlayerScore",function(t){f.opponentScore=t}),a.on("otherPlayerLife",function(t){f.opponentLives=t}),y.init()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzIjpbIi4uLy4uL3B1YmxpYy9qcy9tb2R1bGVzL2NhbnZhcy5qcyIsIi4uLy4uL3B1YmxpYy9qcy9tb2R1bGVzL2JhbGwuanMiLCIuLi8uLi9wdWJsaWMvanMvbW9kdWxlcy9icmljay5qcyIsIi4uLy4uL3B1YmxpYy9qcy9tb2R1bGVzL3BhZGRsZS5qcyIsIi4uLy4uL3B1YmxpYy9qcy9tb2R1bGVzL3BsYXllci5qcyIsIi4uLy4uL3B1YmxpYy9qcy9tb2R1bGVzL2NsaWVudC5qcyIsIi4uLy4uL3B1YmxpYy9qcy9nYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhbnZhcyB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMuY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteUNhbnZhc1wiKTtcblx0XHR0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblx0XHR0aGlzLndpZHRoID0gdGhpcy5jYW52YXMud2lkdGg7XG5cdFx0dGhpcy5oZWlnaHQgPSB0aGlzLmNhbnZhcy5oZWlnaHQ7XG5cdH1cblxuXHRjbGVhcigpIHtcblx0XHR0aGlzLmN0eC5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuXHR9XG5cblx0Ly8gZGV0ZWN0IGNvbGxpc2lvbnMgYWdhaW5zdCBjYW52YXMgZWRnZXNcblx0ZGV0ZWN0RWRnZUNvbGxpc2lvbnMoYmFsbCwgcGFkZGxlLCBwbGF5ZXIpIHtcblx0XHQvLyBkZXRlY3QgY29sbGlzaW9ucyB3aXRoIHRvcCBlZGdlXG5cdFx0aWYgKGJhbGwueSArIGJhbGwuZHkgPCBiYWxsLmJhbGxSYWRpdXMpIHtcblx0XHRcdGJhbGwuZHkgPSAtYmFsbC5keTtcblx0XHR9IGVsc2UgaWYgKGJhbGwueSArIGJhbGwuZHkgPiB0aGlzLmhlaWdodCAtIGJhbGwuYmFsbFJhZGl1cykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRiYWxsLnggPiBwYWRkbGUucGFkZGxlWCAmJlxuXHRcdFx0XHRiYWxsLnggPCBwYWRkbGUucGFkZGxlWCArIHBhZGRsZS5wYWRkbGVXaWR0aFxuXHRcdFx0KSB7XG5cdFx0XHRcdC8vIGJhbGwgY29sbGlkZXMgd2l0aCB0aGUgcGFkZGxlXG5cdFx0XHRcdGJhbGwuZHkgPSAtYmFsbC5keTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHBsYXllci5saXZlcy0tO1xuXHRcdFx0XHRpZiAocGxheWVyLmxpdmVzID09PSAwKSB7XG5cdFx0XHRcdFx0YWxlcnQoXCJHYW1lIE92ZXJcIik7XG5cdFx0XHRcdFx0ZG9jdW1lbnQubG9jYXRpb24ucmVsb2FkKCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YmFsbC54ID0gdGhpcy53aWR0aCAvIDI7XG5cdFx0XHRcdFx0YmFsbC55ID0gdGhpcy5oZWlnaHQgLSAzMDtcblx0XHRcdFx0XHRiYWxsLmR4ID0gMjtcblx0XHRcdFx0XHRiYWxsLmR5ID0gLTI7XG5cdFx0XHRcdFx0cGFkZGxlLnBhZGRsZVggPSAodGhpcy53aWR0aCAtIHBhZGRsZS5wYWRkbGVXaWR0aCkgLyAyO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC8vIGRldGVjdCBjb2xsaXNpb24gd2l0aCBsZWZ0IGFuZCByaWdodCBlZGdlc1xuXHRcdGlmIChcblx0XHRcdGJhbGwueCArIGJhbGwuZHggPCBiYWxsLmJhbGxSYWRpdXMgfHxcblx0XHRcdGJhbGwueCArIGJhbGwuZHggPiB0aGlzLndpZHRoIC0gYmFsbC5iYWxsUmFkaXVzXG5cdFx0KSB7XG5cdFx0XHRiYWxsLmR4ID0gLWJhbGwuZHg7XG5cdFx0fVxuXHR9XG5cblx0ZGV0ZWN0QnJpY2tDb2xsaXNpb25zKGJhbGwsIGJyaWNrLCBwbGF5ZXIpIHtcblx0XHQvLyBjb21wYXJlIHBvc2l0aW9uIG9mIGJyaWNrcyB3aXRoIHRoZSBiYWxsIGZvciBldmVyeSBmcmFtZVxuXHRcdGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGJyaWNrLmJyaWNrQ29sdW1uQ291bnQ7IGNvbCsrKSB7XG5cdFx0XHRmb3IgKGxldCByb3cgPSAwOyByb3cgPCBicmljay5icmlja1Jvd0NvdW50OyByb3crKykge1xuXHRcdFx0XHRsZXQgYiA9IGJyaWNrLmJyaWNrc1tjb2xdW3Jvd107XG5cblx0XHRcdFx0aWYgKGIuc3RhdHVzID09PSAxKSB7XG5cdFx0XHRcdFx0Ly8gYSBjb2xsaXNpb24gd2l0aCBhIGJyaWNrIG9jY3VycyB3aGVuIHRoZSBjZW50ZXIgb2YgdGhlIGJhbGwgaXMgaW5zaWRlIGEgYnJpY2sncyBjb29yZGluYXRlc1xuXHRcdFx0XHRcdC8vIGlmIGEgY29sbGlzaW9uIG9jY3VycywgY2hhbmdlIHRoZSBtb3ZlbWVudCBvZiB0aGUgYmFsbCwgYSBicmljaydzIHN0YXR1cywgc2NvcmVcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRiYWxsLnggPiBiLnggJiYgLy8geCBwb3NpdGlvbiBvZiB0aGUgYmFsbCBpcyBncmVhdGVyIHRoYW4gdGhlIHggcG9zaXRpb24gb2YgdGhlIGJyaWNrXG5cdFx0XHRcdFx0XHRiYWxsLnggPCBiLnggKyBicmljay5icmlja1dpZHRoICYmIC8vIHggcG9zaXRpb24gb2YgdGhlIGJhbGwgaXMgbGVzcyB0aGFuIHRoZSB4IHBvc2l0aW9uIG9mIHRoZSBicmljayBwbHVzIGl0cyB3aWR0aFxuXHRcdFx0XHRcdFx0YmFsbC55ID4gYi55ICYmIC8vIHkgcG9zaXRpb24gb2YgdGhlIGJhbGwgaXMgZ3JlYXRlciB0aGFuIHRoZSB5IHBvc2l0aW9uIG9mIHRoZSBicmlja1xuXHRcdFx0XHRcdFx0YmFsbC55IDwgYi55ICsgYnJpY2suYnJpY2tIZWlnaHQgLy8geSBwb3NpdGlvbiBvZiB0aGUgYmFsbCBpcyBsZXNzIHRoYW4gdGhlIHkgcG9zaXRpb24gb2YgdGhlIGJyaWNrIHBsdXMgaXRzIGhlaWdodFxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0YmFsbC5keSA9IC1iYWxsLmR5O1xuXHRcdFx0XHRcdFx0Yi5zdGF0dXMgPSAwO1xuXHRcdFx0XHRcdFx0cGxheWVyLnNjb3JlKys7XG5cdFx0XHRcdFx0XHRpZiAocGxheWVyLnNjb3JlID09IGJyaWNrLmJyaWNrUm93Q291bnQgKiBicmljay5icmlja0NvbHVtbkNvdW50KSB7XG5cdFx0XHRcdFx0XHRcdC8vIGRpc3BsYXkgd2lubmluZyBtc2cgd2hlbiBzY29yZSBpcyBlcXVhbCB0byB0aGUgbnVtYmVyIG9mIGJyaWNrc1xuXHRcdFx0XHRcdFx0XHRhbGVydChcIllvdSBXaW4hIENvbmdyYXRzIVwiKTtcblx0XHRcdFx0XHRcdFx0ZG9jdW1lbnQubG9jYXRpb24ucmVsb2FkKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhbnZhcztcbiIsImNsYXNzIEJhbGwge1xuXHRjb25zdHJ1Y3RvcihoZWlnaHQsIHdpZHRoKSB7XG5cdFx0dGhpcy5iYWxsQ29sb3IgPSBcIiMwMDk1RERcIjtcblx0XHQvLyBzdGFydGluZyBwb3NpdGlvblxuXHRcdHRoaXMueCA9IHdpZHRoIC8gMjtcblx0XHR0aGlzLnkgPSBoZWlnaHQgLSAzMDtcblx0XHR0aGlzLmJhbGxSYWRpdXMgPSAxMDtcblx0XHQvLyB2ZWxvY2l0eSAtIGNoYW5nZSBpbiBwb3NpdGlvblxuXHRcdHRoaXMuZHggPSAyO1xuXHRcdHRoaXMuZHkgPSAtMjtcblx0fVxuXG5cdC8vIGRyYXcgYmFsbCB0byB0aGUgY2FudmFzXG5cdGRyYXdCYWxsKGNhbnZhcykge1xuXHRcdGNhbnZhcy5jdHguYmVnaW5QYXRoKCk7XG5cdFx0Y2FudmFzLmN0eC5hcmModGhpcy54LCB0aGlzLnksIHRoaXMuYmFsbFJhZGl1cywgMCwgTWF0aC5QSSAqIDIpO1xuXHRcdGNhbnZhcy5jdHguZmlsbFN0eWxlID0gdGhpcy5iYWxsQ29sb3I7XG5cdFx0Y2FudmFzLmN0eC5maWxsKCk7XG5cdFx0Y2FudmFzLmN0eC5jbG9zZVBhdGgoKTtcblx0fVxuXG5cdC8vIHVwZGF0ZSBiYWxsJ3MgbW92ZW1lbnRcblx0dXBkYXRlKCkge1xuXHRcdHRoaXMueCArPSB0aGlzLmR4O1xuXHRcdHRoaXMueSArPSB0aGlzLmR5O1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhbGw7XG4iLCJjbGFzcyBCcmljayB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdC8vIGJyaWNrIHByb3BlcnRpZXNcblx0XHR0aGlzLmJyaWNrQ29sb3IgPSBcIiMwMDk1RERcIjtcblx0XHR0aGlzLmJyaWNrUm93Q291bnQgPSAzO1xuXHRcdHRoaXMuYnJpY2tDb2x1bW5Db3VudCA9IDU7XG5cdFx0dGhpcy5icmlja1dpZHRoID0gNzU7XG5cdFx0dGhpcy5icmlja0hlaWdodCA9IDIwO1xuXHRcdHRoaXMuYnJpY2tQYWRkaW5nID0gMTA7XG5cdFx0dGhpcy5icmlja09mZnNldFRvcCA9IDMwO1xuXHRcdHRoaXMuYnJpY2tPZmZzZXRMZWZ0ID0gMzA7XG5cdFx0Ly8gaW5pdGlhbGl6ZSBicmlja3Ncblx0XHR0aGlzLmJyaWNrcyA9IFtdO1xuXG5cdFx0Zm9yIChsZXQgY29sID0gMDsgY29sIDwgdGhpcy5icmlja0NvbHVtbkNvdW50OyBjb2wrKykge1xuXHRcdFx0dGhpcy5icmlja3NbY29sXSA9IFtdO1xuXHRcdFx0Zm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5icmlja1Jvd0NvdW50OyByb3crKykge1xuXHRcdFx0XHR0aGlzLmJyaWNrc1tjb2xdW3Jvd10gPSB7IHg6IDAsIHk6IDAsIHN0YXR1czogMSB9OyAvLyBkZWZhdWx0IGJyaWNrIHByb3BlcnRpZXNcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBkcmF3IGJyaWNrIGdyaWQgdG8gdGhlIGNhbnZhc1xuXHRkcmF3QnJpY2tzKGNhbnZhcykge1xuXHRcdGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMuYnJpY2tDb2x1bW5Db3VudDsgY29sKyspIHtcblx0XHRcdGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuYnJpY2tSb3dDb3VudDsgcm93KyspIHtcblx0XHRcdFx0bGV0IGJyaWNrID0gdGhpcy5icmlja3NbY29sXVtyb3ddO1xuXHRcdFx0XHRpZiAoYnJpY2suc3RhdHVzID09PSAxKSB7XG5cdFx0XHRcdFx0Ly8gYmFsbCBkaWQgbm90IGNvbGxpZGUgd2l0aCBicmlja1xuXHRcdFx0XHRcdGxldCBicmlja1ggPVxuXHRcdFx0XHRcdFx0Y29sICogKHRoaXMuYnJpY2tXaWR0aCArIHRoaXMuYnJpY2tQYWRkaW5nKSArIHRoaXMuYnJpY2tPZmZzZXRMZWZ0OyAvLyBvZmZzZXQgWCBwb3NpdGlvbiBmcm9tIHByZXZpb3VzIGJyaWNrXG5cdFx0XHRcdFx0bGV0IGJyaWNrWSA9XG5cdFx0XHRcdFx0XHRyb3cgKiAodGhpcy5icmlja0hlaWdodCArIHRoaXMuYnJpY2tQYWRkaW5nKSArIHRoaXMuYnJpY2tPZmZzZXRUb3A7IC8vIG9mZnNldCBZIHBvc2l0aW9uIGZyb20gcHJldmlvdXMgYnJpY2tcblx0XHRcdFx0XHRicmljay54ID0gYnJpY2tYO1xuXHRcdFx0XHRcdGJyaWNrLnkgPSBicmlja1k7XG5cdFx0XHRcdFx0Y2FudmFzLmN0eC5iZWdpblBhdGgoKTtcblx0XHRcdFx0XHRjYW52YXMuY3R4LnJlY3QoYnJpY2sueCwgYnJpY2sueSwgdGhpcy5icmlja1dpZHRoLCB0aGlzLmJyaWNrSGVpZ2h0KTtcblx0XHRcdFx0XHRjYW52YXMuY3R4LmZpbGxTdHlsZSA9IHRoaXMuYnJpY2tDb2xvcjtcblx0XHRcdFx0XHRjYW52YXMuY3R4LmZpbGwoKTtcblx0XHRcdFx0XHRjYW52YXMuY3R4LmNsb3NlUGF0aCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJyaWNrO1xuIiwiY2xhc3MgUGFkZGxlIHtcblx0Y29uc3RydWN0b3IoY2FudmFzKSB7XG5cdFx0Ly8gcGFkZGxlIHByb3BlcnRpZXNcblx0XHR0aGlzLnBhZGRsZUNvbG9yID0gXCIjMDA5NUREXCI7XG5cdFx0dGhpcy5wYWRkbGVIZWlnaHQgPSAxMDtcblx0XHR0aGlzLnBhZGRsZVdpZHRoID0gNzU7XG5cdFx0Ly8gc3RhcnRpbmcgcG9zaXRpb25cblx0XHR0aGlzLnBhZGRsZVggPSAoY2FudmFzLndpZHRoIC0gdGhpcy5wYWRkbGVXaWR0aCkgLyAyO1xuXHR9XG5cblx0Ly8gZHJhdyBwYWRkbGUgdG8gdGhlIGNhbnZhc1xuXHRkcmF3UGFkZGxlKGNhbnZhcykge1xuXHRcdGNhbnZhcy5jdHguYmVnaW5QYXRoKCk7XG5cdFx0Y2FudmFzLmN0eC5yZWN0KFxuXHRcdFx0dGhpcy5wYWRkbGVYLFxuXHRcdFx0Y2FudmFzLmhlaWdodCAtIHRoaXMucGFkZGxlSGVpZ2h0LFxuXHRcdFx0dGhpcy5wYWRkbGVXaWR0aCxcblx0XHRcdHRoaXMucGFkZGxlSGVpZ2h0XG5cdFx0KTtcblx0XHRjYW52YXMuY3R4LmZpbGxTdHlsZSA9IHRoaXMucGFkZGxlQ29sb3I7XG5cdFx0Y2FudmFzLmN0eC5maWxsKCk7XG5cdFx0Y2FudmFzLmN0eC5jbG9zZVBhdGgoKTtcblx0fVxuXG5cdC8vIHVwZGF0ZSBwYWRkbGUgcG9zaXRpb25cblx0dXBkYXRlKHgpIHtcblx0XHR0aGlzLnBhZGRsZVggKz0geDtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBQYWRkbGU7XG4iLCJjbGFzcyBQbGF5ZXIge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmxpdmVzID0gMztcblx0XHR0aGlzLnNjb3JlID0gMDtcblx0XHR0aGlzLm9wcG9uZW50U2NvcmUgPSAwO1xuXHRcdHRoaXMub3Bwb25lbnRMaXZlcyA9IDA7XG5cdFx0dGhpcy54ID0gMDtcblx0XHR0aGlzLnkgPSAwO1xuXHR9XG5cblx0Ly8gZHJhdyBjdXJyZW50IHNjb3JlIHRvIHRoZSBjYW52YXNcblx0ZHJhd1Njb3JlKGNhbnZhcykge1xuXHRcdGNhbnZhcy5jdHguZm9udCA9IFwiMTZweCBBcmlhbFwiO1xuXHRcdGNhbnZhcy5jdHguZmlsbFN0eWxlID0gXCIjMDA5NUREXCI7XG5cdFx0Y2FudmFzLmN0eC5maWxsVGV4dChcIlNjb3JlOiBcIiArIHRoaXMuc2NvcmUsIDgsIDIwKTtcblx0XHRjYW52YXMuY3R4LmZpbGxUZXh0KFwiT3Bwb25lbnQncyBTY29yZSBcIiArIHRoaXMub3Bwb25lbnRTY29yZSwgOCwgMzApO1xuXHR9XG5cblx0Ly8gZHJhdyBjdXJyZW50IG51bWJlciBvZiBsaXZlcyB0byB0aGUgY2FudmFzXG5cdGRyYXdMaXZlcyhjYW52YXMpIHtcblx0XHRjYW52YXMuY3R4LmZvbnQgPSBcIjE2cHggQXJpYWxcIjtcblx0XHRjYW52YXMuY3R4LmZpbGxTdHlsZSA9IFwiIzAwOTVERFwiO1xuXHRcdGNhbnZhcy5jdHguZmlsbFRleHQoXCJMaXZlczogXCIgKyB0aGlzLmxpdmVzLCBjYW52YXMud2lkdGggLSA2NSwgMjApO1xuXHRcdGNhbnZhcy5jdHguZmlsbFRleHQoXG5cdFx0XHRcIk9wcG9uZW50J3MgTGl2ZXMgXCIgKyB0aGlzLm9wcG9uZW50TGl2ZXMsXG5cdFx0XHRjYW52YXMud2lkdGggLSAxNDUsXG5cdFx0XHQzMFxuXHRcdCk7XG5cdH1cblxuXHQvLyB1ZHBhdGUgcGxheWVyIGRhdGFcblx0dXBkYXRlKGxpdmVzLCB1c2VybmFtZSwgc2NvcmUpIHtcblx0XHR0aGlzLmxpdmVzICs9IGxpdmVzO1xuXHRcdHRoaXMudXNlcm5hbWUgPSB1c2VybmFtZTtcblx0XHR0aGlzLnNjb3JlICs9IHNjb3JlO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBsYXllcjtcbiIsImNvbnN0IHNvY2tldCA9IGlvLmNvbm5lY3QoKTsgLy8gaW5zdGF0aWF0ZSBjb25uZWN0aW9uIHRvIHNlcnZlciAtIGxvY2FsIGhvc3RcblxuZXhwb3J0IGRlZmF1bHQgc29ja2V0O1xuIiwiLy8gbW9kdWxlc1xuaW1wb3J0IENhbnZhcyBmcm9tIFwiLi9tb2R1bGVzL2NhbnZhc1wiO1xuaW1wb3J0IEJhbGwgZnJvbSBcIi4vbW9kdWxlcy9iYWxsXCI7XG5pbXBvcnQgQnJpY2sgZnJvbSBcIi4vbW9kdWxlcy9icmlja1wiO1xuaW1wb3J0IFBhZGRsZSBmcm9tIFwiLi9tb2R1bGVzL3BhZGRsZVwiO1xuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9tb2R1bGVzL3BsYXllclwiO1xuaW1wb3J0IHNvY2tldCBmcm9tIFwiLi9tb2R1bGVzL2NsaWVudFwiO1xuXG4vLyBlbWFibGUgbGl2ZSByZWxvYWRcbmRvY3VtZW50LndyaXRlKFxuXHQnPHNjcmlwdCBzcmM9XCJodHRwOi8vJyArXG5cdFx0KGxvY2F0aW9uLmhvc3QgfHwgXCJsb2NhbGhvc3RcIikuc3BsaXQoXCI6XCIpWzBdICtcblx0XHQnOjM1NzI5L2xpdmVyZWxvYWQuanM/c25pcHZlcj0xXCI+PC8nICtcblx0XHRcInNjcmlwdD5cIlxuKTtcblxuY2xhc3MgR2FtZSB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMucmlnaHRQcmVzc2VkID0gZmFsc2U7XG5cdFx0dGhpcy5sZWZ0UHJlc3NlZCA9IGZhbHNlO1xuXHRcdHRoaXMucGxheWVycyA9IFtdOyAvLyBob2xkcyBhbGwgcGxheWVycyBpbiB0aGUgZ2FtZVxuXG5cdFx0Ly8gbGlzdGVuIGZvciBrZXkgcHJlc3MgYW5kIGtleSByZWxlYXNlXG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMua2V5RG93bkhhbmRsZXIsIGZhbHNlKTtcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMua2V5VXBIYW5kbGVyLCBmYWxzZSk7XG5cdFx0Ly8gbGlzdGVuIGZvciBtb3VzZSBtb3ZlbWVudFxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMubW91c2VNb3ZlSGFuZGxlciwgZmFsc2UpO1xuXHR9XG5cblx0Ly8gaW5pdGlhbGl6ZSB0aGUgZ2FtZSBvYmplY3RzIGFuZCB0aGUgZ2FtZSBsb29wXG5cdGluaXQoKSB7XG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMuZHJhdyhjYW52YXMpKTtcblx0fVxuXG5cdC8vIG1haW4gZHJhdyBmdW5jdGlvbiBvZiB0aGUgZ2FtZSAtIGluaXRpYXRlcyBnYW1lIGxvb3AgLSBXT1JLIElOIFBST0dSRVNTXG5cdGRyYXcoY2FudmFzKSB7XG5cdFx0Ly8gY2xlYXIgcHJldmlvdXMgYmFsbCBiZWZvcmUgZHJhd2luZyBhIG5ldyBvbmVcblx0XHRjYW52YXMuY2xlYXIoKTtcblx0XHRjYW52YXMuY3R4LmJlZ2luUGF0aCgpO1xuXHRcdHBhZGRsZS5kcmF3UGFkZGxlKGNhbnZhcyk7XG5cdFx0YnJpY2suZHJhd0JyaWNrcyhjYW52YXMpO1xuXHRcdGJhbGwuZHJhd0JhbGwoY2FudmFzKTtcblx0XHRwbGF5ZXIuZHJhd1Njb3JlKGNhbnZhcyk7XG5cdFx0cGxheWVyLmRyYXdMaXZlcyhjYW52YXMpO1xuXHRcdGNhbnZhcy5kZXRlY3RCcmlja0NvbGxpc2lvbnMoYmFsbCwgYnJpY2ssIHBsYXllcik7XG5cdFx0Y2FudmFzLmRldGVjdEVkZ2VDb2xsaXNpb25zKGJhbGwsIHBhZGRsZSwgcGxheWVyKTtcblxuXHRcdHNvY2tldC5lbWl0KFwicGxheWVyU2NvcmVkXCIsIHBsYXllcik7IC8vIHNlbmQgcGxheWVyIGRhdGEgdG8gc2VydmVyXG5cdFx0c29ja2V0LmVtaXQoXCJwbGF5ZXJMaWZlXCIsIHBsYXllcik7XG5cblx0XHQvLyBtb3ZlIHBhZGRsZSByaWdodCB1bnRpbCB0aGUgcmlnaHQgZWRnZSBvZiB0aGUgY2FudmFzXG5cdFx0aWYgKFxuXHRcdFx0dGhpcy5yaWdodFByZXNzZWQgJiZcblx0XHRcdHBhZGRsZS5wYWRkbGVYIDwgY2FudmFzLndpZHRoIC0gcGFkZGxlLnBhZGRsZVdpZHRoXG5cdFx0KSB7XG5cdFx0XHRwYWRkbGUudXBkYXRlKDcpO1xuXHRcdH0gZWxzZSBpZiAodGhpcy5sZWZ0UHJlc3NlZCAmJiBwYWRkbGUucGFkZGxlWCA+IDApIHtcblx0XHRcdHBhZGRsZS51cGRhdGUoLTcpO1xuXHRcdH1cblx0XHQvLyB1cGRhdGUgYmFsbCdzIHBvc2l0aW9uXG5cdFx0YmFsbC51cGRhdGUoKTtcblxuXHRcdC8vIGFuaW1hdGlvbiBsb29wc1xuXHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG5cdFx0XHR0aGlzLmRyYXcoY2FudmFzKTtcblx0XHR9KTtcblx0fVxuXG5cdC8vIGNoZWNrIGlmIGEga2V5IHdhcyBwcmVzc2VkXG5cdGtleURvd25IYW5kbGVyKGUpIHtcblx0XHRpZiAoZS5rZXlDb2RlID09PSAzOSkge1xuXHRcdFx0Ly8gcmlnaHQgY3Vyc29yIGtleSBwcmVzc2VkXG5cdFx0XHRnLnJpZ2h0UHJlc3NlZCA9IHRydWU7XG5cdFx0fSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDM3KSB7XG5cdFx0XHQvLyBsZWZ0IGN1cnNvciBrZXkgcHJlc3NlZFxuXHRcdFx0Zy5sZWZ0UHJlc3NlZCA9IHRydWU7XG5cdFx0fVxuXHR9XG5cblx0Ly8gY2hlY2sgaWYgYSBrZXkgd2FzIHJlbGVhc2VkXG5cdGtleVVwSGFuZGxlcihlKSB7XG5cdFx0Ly8gcmVzZXQga2V5IHN0YXRlIHRvIGRlZmF1bHRcblx0XHRpZiAoZS5rZXlDb2RlID09PSAzOSkge1xuXHRcdFx0Ly8gcmlnaHQgY3Vyc29yIGtleSByZWxlYXNlZFxuXHRcdFx0Zy5yaWdodFByZXNzZWQgPSBmYWxzZTtcblx0XHR9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gMzcpIHtcblx0XHRcdC8vIHJpZ2h0IGN1cnNvciBrZXkgcmVsZWFzZWRcblx0XHRcdGcubGVmdFByZXNzZWQgPSBmYWxzZTtcblx0XHR9XG5cdH1cblxuXHQvLyBtb3ZlIHBhZGRsZSByZWxhdGl2ZSB0byB0aGUgbW91c2UgcG9zaXRpb24gd2l0aGluIGNhbnZhc1xuXHRtb3VzZU1vdmVIYW5kbGVyKGUpIHtcblx0XHRsZXQgcmVsYXRpdmVYID0gZS5jbGllbnRYIC0gY2FudmFzLmNhbnZhcy5vZmZzZXRMZWZ0O1xuXHRcdGlmIChyZWxhdGl2ZVggPiAwICYmIHJlbGF0aXZlWCA8IGNhbnZhcy53aWR0aCkge1xuXHRcdFx0cGFkZGxlLnBhZGRsZVggPSByZWxhdGl2ZVggLSBwYWRkbGUucGFkZGxlV2lkdGggLyAyO1xuXHRcdH1cblx0fVxufVxuXG4vLyA8ID09PT09IFNUQVJUSU5HIFRIRSBHQU1FID09PT09ID5cblxuY29uc3QgY2FudmFzID0gbmV3IENhbnZhcygpO1xuY29uc3QgYmFsbCA9IG5ldyBCYWxsKGNhbnZhcy5oZWlnaHQsIGNhbnZhcy53aWR0aCk7XG5jb25zdCBicmljayA9IG5ldyBCcmljayhjYW52YXMpO1xuY29uc3QgcGFkZGxlID0gbmV3IFBhZGRsZShjYW52YXMpO1xuY29uc3QgcGxheWVyID0gbmV3IFBsYXllcigpO1xuY29uc3QgZyA9IG5ldyBHYW1lKCk7IC8vIGluc3RhbnRpYXRlIGEgZ2FtZVxuXG4vLyBERUJVR0dJTkc6IHZlcmlmeSBhIHNvY2tldCBoYXMgYmVlbiBlc3RhYmxpc2hlZFxuLy8gc29ja2V0Lm9uKFwiU29ja2V0SWRcIiwgZnVuY3Rpb24oZGF0YSkge1xuLy8gXHRjb25zb2xlLmxvZyhkYXRhKTtcbi8vIFx0Y29uc29sZS5sb2coZGF0YS5wbGF5ZXJJRCk7XG4vLyB9KTtcblxuLy8gc3RvcmUgeW91ciBvcHBvbmVudCdzIHNjb3JlXG5zb2NrZXQub24oXCJvdGhlclBsYXllclNjb3JlXCIsIGZ1bmN0aW9uKGRhdGEpIHtcblx0cGxheWVyLm9wcG9uZW50U2NvcmUgPSBkYXRhO1xufSk7XG5cbi8vIHN0b3JlIHlvdXIgb3Bwb25lbnQncyBsaWZlIGNvdW50XG5zb2NrZXQub24oXCJvdGhlclBsYXllckxpZmVcIiwgZnVuY3Rpb24oZGF0YSkge1xuXHRwbGF5ZXIub3Bwb25lbnRMaXZlcyA9IGRhdGE7XG59KTtcblxuZy5pbml0KCk7IC8vIHN0YXJ0IHRoZSBnYW1lIGxvb3BcbiJdLCJuYW1lcyI6WyJDYW52YXMiLCJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3R4IiwidGhpcyIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImNsZWFyUmVjdCIsImJhbGwiLCJwYWRkbGUiLCJwbGF5ZXIiLCJ5IiwiZHkiLCJiYWxsUmFkaXVzIiwieCIsInBhZGRsZVgiLCJwYWRkbGVXaWR0aCIsImxpdmVzIiwibG9jYXRpb24iLCJyZWxvYWQiLCJkeCIsImJyaWNrIiwiY29sIiwiYnJpY2tDb2x1bW5Db3VudCIsInJvdyIsImJyaWNrUm93Q291bnQiLCJiIiwiYnJpY2tzIiwic3RhdHVzIiwiYnJpY2tXaWR0aCIsImJyaWNrSGVpZ2h0Iiwic2NvcmUiLCJCYWxsIiwiYmFsbENvbG9yIiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwiZmlsbFN0eWxlIiwiZmlsbCIsImNsb3NlUGF0aCIsIkJyaWNrIiwiYnJpY2tDb2xvciIsImJyaWNrUGFkZGluZyIsImJyaWNrT2Zmc2V0VG9wIiwiYnJpY2tPZmZzZXRMZWZ0IiwiYnJpY2tYIiwiYnJpY2tZIiwicmVjdCIsIlBhZGRsZSIsInBhZGRsZUNvbG9yIiwicGFkZGxlSGVpZ2h0IiwiUGxheWVyIiwib3Bwb25lbnRTY29yZSIsIm9wcG9uZW50TGl2ZXMiLCJmb250IiwiZmlsbFRleHQiLCJ1c2VybmFtZSIsInNvY2tldCIsImlvIiwiY29ubmVjdCIsIndyaXRlIiwiaG9zdCIsInNwbGl0IiwiR2FtZSIsInJpZ2h0UHJlc3NlZCIsImxlZnRQcmVzc2VkIiwicGxheWVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJrZXlEb3duSGFuZGxlciIsImtleVVwSGFuZGxlciIsIm1vdXNlTW92ZUhhbmRsZXIiLCJfdGhpcyIsImRyYXciLCJjbGVhciIsImRyYXdQYWRkbGUiLCJkcmF3QnJpY2tzIiwiZHJhd0JhbGwiLCJkcmF3U2NvcmUiLCJkcmF3TGl2ZXMiLCJkZXRlY3RCcmlja0NvbGxpc2lvbnMiLCJkZXRlY3RFZGdlQ29sbGlzaW9ucyIsImVtaXQiLCJ1cGRhdGUiLCJlIiwia2V5Q29kZSIsInJlbGF0aXZlWCIsImNsaWVudFgiLCJvZmZzZXRMZWZ0IiwiZyIsIm9uIiwiZGF0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
