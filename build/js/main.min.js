!function(){"use strict";document.write('<script src="http://'+(location.host||"localhost").split(":")[0]+':35729/livereload.js?snipver=1"><\/script>');(void 0).io();var i=document.getElementById("myCanvas"),l=i.getContext("2d"),e=3,o=0,n=10,a=i.height-30,r=i.width/2,d=2,c=-2,s=10,f=75,h=(i.width-f)/2,u=!1,v=!1;document.addEventListener("keydown",function(t){39===t.keyCode?u=!0:37===t.keyCode&&(v=!0)},!1),document.addEventListener("keyup",function(t){39===t.keyCode?u=!1:37===t.keyCode&&(v=!1)},!1),document.addEventListener("mousemove",function(t){var e=t.clientX-i.offsetLeft;0<e&&e<i.width&&(h=e-f/2)},!1);for(var y=3,m=5,g=75,w=20,D=10,x=30,p=30,C=[],t=0;t<m;t++){C[t]=[];for(var P=0;P<y;P++)C[t][P]={x:0,y:0,status:1}}!function t(){l.clearRect(0,0,i.width,i.height),function(){for(var t=0;t<m;t++)for(var e=0;e<y;e++)if(1===C[t][e].status){var i=t*(g+D)+p,o=e*(w+D)+x;C[t][e].x=i,C[t][e].y=o,l.beginPath(),l.rect(i,o,g,w),l.fillStyle="#0095DD",l.fill(),l.closePath()}}(),l.beginPath(),l.arc(a,r,n,0,2*Math.PI),l.fillStyle="#0095DD",l.fill(),l.closePath(),l.beginPath(),l.rect(h,i.height-s,f,s),l.fillStyle="#0095DD",l.fill(),l.closePath(),l.font="16px Arial",l.fillStyle="#0095DD",l.fillText("Score: "+o,8,20),l.font="16px Arial",l.fillStyle="#0095DD",l.fillText("Lives: "+e,i.width-65,20),function(){for(var t=0;t<m;t++)for(var e=0;e<y;e++){var i=C[t][e];1===i.status&&a>i.x&&a<i.x+g&&r>i.y&&r<i.y+w&&(c=-c,i.status=0,++o==y*m&&(alert("You Win! Congrats!"),document.location.reload()))}}(),r+c<n?c=-c:r+c>i.height-n&&(h<a&&a<h+f?c=-c:0==--e?(alert("Game Over"),document.location.reload()):(a=i.width/2,r=i.height-30,c=-(d=2),h=(i.width-f)/2)),(a+d<n||a+d>i.width-n)&&(d=-d),u&&h<i.width-f?h+=7:v&&0<h&&(h-=7),a+=d,r+=c,requestAnimationFrame(t)}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
