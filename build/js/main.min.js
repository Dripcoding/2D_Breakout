!function(){"use strict";var s=function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")},n=function(){function s(t,i){for(var e=0;e<i.length;e++){var s=i[e];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(t,i,e){return i&&s(t.prototype,i),e&&s(t,e),t}}(),t=function(){function t(){s(this,t),this.canvas=document.getElementById("myCanvas"),this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height}return n(t,[{key:"clear",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"detectEdgeCollisions",value:function(t,i,e){t.y+t.dy<t.ballRadius?t.dy=-t.dy:t.y+t.dy>this.height-t.ballRadius&&(t.x>i.paddleX&&t.x<i.paddleX+i.paddleWidth?t.dy=-t.dy:(e.lives--,0===e.lives?(alert("Game Over"),document.location.reload()):(t.x=this.width/2,t.y=this.height-30,t.dx=2,t.dy=-2,i.paddleX=(this.width-i.paddleWidth)/2))),(t.x+t.dx<t.ballRadius||t.x+t.dx>this.width-t.ballRadius)&&(t.dx=-t.dx)}},{key:"detectBrickCollisions",value:function(t,i,e){for(var s=0;s<i.brickColumnCount;s++)for(var n=0;n<i.brickRowCount;n++){var r=i.bricks[s][n];1===r.status&&t.x>r.x&&t.x<r.x+i.brickWidth&&t.y>r.y&&t.y<r.y+i.brickHeight&&(t.dy=-t.dy,r.status=0,e.score++,e.score==i.brickRowCount*i.brickColumnCount&&(alert("You Win! Congrats!"),document.location.reload()))}}}]),t}(),i=function(){function e(t,i){s(this,e),this.ballColor="#0095DD",this.x=i/2,this.y=t-30,this.ballRadius=10,this.dx=2,this.dy=-2}return n(e,[{key:"drawBall",value:function(t){t.ctx.beginPath(),t.ctx.arc(this.x,this.y,this.ballRadius,0,2*Math.PI),t.ctx.fillStyle=this.ballColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(){this.x+=this.dx,this.y+=this.dy}}]),e}(),e=function(){function e(){s(this,e),this.brickColor="#0095DD",this.brickRowCount=3,this.brickColumnCount=5,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.bricks=[];for(var t=0;t<this.brickColumnCount;t++){this.bricks[t]=[];for(var i=0;i<this.brickRowCount;i++)this.bricks[t][i]={x:0,y:0,status:1}}}return n(e,[{key:"drawBricks",value:function(t){for(var i=0;i<this.brickColumnCount;i++)for(var e=0;e<this.brickRowCount;e++){var s=this.bricks[i][e];if(1===s.status){var n=i*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,r=e*(this.brickHeight+this.brickPadding)+this.brickOffsetTop;s.x=n,s.y=r,t.ctx.beginPath(),t.ctx.rect(s.x,s.y,this.brickWidth,this.brickHeight),t.ctx.fillStyle=this.brickColor,t.ctx.fill(),t.ctx.closePath()}}}}]),e}(),r=function(){function i(t){s(this,i),this.paddleColor="#0095DD",this.paddleHeight=10,this.paddleWidth=75,this.paddleX=(t.width-this.paddleWidth)/2}return n(i,[{key:"drawPaddle",value:function(t){t.ctx.beginPath(),t.ctx.rect(this.paddleX,t.height-this.paddleHeight,this.paddleWidth,this.paddleHeight),t.ctx.fillStyle=this.paddleColor,t.ctx.fill(),t.ctx.closePath()}},{key:"update",value:function(t){this.paddleX+=t}}]),i}(),a=function(){function t(){s(this,t),this.lives=3,this.username="",this.score=0}return n(t,[{key:"drawScore",value:function(t){t.ctx.font="16px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Score: "+this.score,8,20)}},{key:"drawLives",value:function(t){t.ctx.font="16px Arial",t.ctx.fillStyle="#0095DD",t.ctx.fillText("Lives: "+this.lives,t.width-65,20)}},{key:"update",value:function(t,i,e){this.lives+=t,this.username=i,this.score+=e}}]),t}();document.write('<script src="http://'+(location.host||"localhost").split(":")[0]+':35729/livereload.js?snipver=1"><\/script>');var d=function(){function t(){s(this,t)}return n(t,[{key:"init",value:function(){var t=this;window.requestAnimationFrame(function(){return t.draw(h)})}},{key:"draw",value:function(t){var i=this;document.addEventListener("keydown",this.keyDownHandler,!1),document.addEventListener("keyup",this.keyUpHandler,!1),document.addEventListener("mousemove",this.mouseMoveHandler,!1),t.clear(),o.drawBricks(t),l.drawBall(t),c.drawPaddle(t),u.drawScore(t),u.drawLives(t),t.detectBrickCollisions(l,o,u),t.detectEdgeCollisions(l,c,u),this.rightPressed&&c.paddleX<t.width-c.paddleWidth?(console.log("made it"),c.update(7)):this.leftPressed&&0<c.paddleX&&c.update(-7),l.update(),requestAnimationFrame(function(){i.draw(t)})}},{key:"keyDownHandler",value:function(t){39===t.keyCode?this.rightPressed=!0:37===t.keyCode&&(this.leftPressed=!0)}},{key:"keyUpHandler",value:function(t){39===t.keyCode?this.rightPressed=!1:37===t.keyCode&&(this.leftPressed=!1)}}]),t}(),h=new t,l=new i(h.height,h.width),o=new e(h),c=new r(h),u=new a;(new d).init()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
